{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends, __values } from \"tslib\";\nimport { getCorrectPropertyName } from '@material/animation/util';\nimport { MDCFoundation } from '@material/base/foundation';\nimport { animationDimensionPercentages as percents, cssClasses, strings } from './constants';\n\nvar MDCLinearProgressFoundation =\n/** @class */\nfunction (_super) {\n  __extends(MDCLinearProgressFoundation, _super);\n\n  function MDCLinearProgressFoundation(adapter) {\n    var _this = _super.call(this, __assign(__assign({}, MDCLinearProgressFoundation.defaultAdapter), adapter)) || this;\n\n    _this.observer = null;\n    return _this;\n  }\n\n  Object.defineProperty(MDCLinearProgressFoundation, \"cssClasses\", {\n    get: function () {\n      return cssClasses;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCLinearProgressFoundation, \"strings\", {\n    get: function () {\n      return strings;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCLinearProgressFoundation, \"defaultAdapter\", {\n    get: function () {\n      return {\n        addClass: function () {\n          return undefined;\n        },\n        attachResizeObserver: function () {\n          return null;\n        },\n        forceLayout: function () {\n          return undefined;\n        },\n        getWidth: function () {\n          return 0;\n        },\n        hasClass: function () {\n          return false;\n        },\n        setBufferBarStyle: function () {\n          return null;\n        },\n        setPrimaryBarStyle: function () {\n          return null;\n        },\n        setStyle: function () {\n          return undefined;\n        },\n        removeAttribute: function () {\n          return undefined;\n        },\n        removeClass: function () {\n          return undefined;\n        },\n        setAttribute: function () {\n          return undefined;\n        }\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MDCLinearProgressFoundation.prototype.init = function () {\n    var _this = this;\n\n    this.determinate = !this.adapter.hasClass(cssClasses.INDETERMINATE_CLASS);\n    this.adapter.addClass(cssClasses.ANIMATION_READY_CLASS);\n    this.progress = 0;\n    this.buffer = 1;\n    this.observer = this.adapter.attachResizeObserver(function (entries) {\n      var e_1, _a;\n\n      if (_this.determinate) {\n        return;\n      }\n\n      try {\n        for (var entries_1 = __values(entries), entries_1_1 = entries_1.next(); !entries_1_1.done; entries_1_1 = entries_1.next()) {\n          var entry = entries_1_1.value;\n\n          if (entry.contentRect) {\n            _this.calculateAndSetDimensions(entry.contentRect.width);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (entries_1_1 && !entries_1_1.done && (_a = entries_1.return)) _a.call(entries_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    });\n\n    if (!this.determinate && this.observer) {\n      this.calculateAndSetDimensions(this.adapter.getWidth());\n    }\n  };\n\n  MDCLinearProgressFoundation.prototype.setDeterminate = function (isDeterminate) {\n    this.determinate = isDeterminate;\n\n    if (this.determinate) {\n      this.adapter.removeClass(cssClasses.INDETERMINATE_CLASS);\n      this.adapter.setAttribute(strings.ARIA_VALUENOW, this.progress.toString());\n      this.adapter.setAttribute(strings.ARIA_VALUEMAX, '1');\n      this.adapter.setAttribute(strings.ARIA_VALUEMIN, '0');\n      this.setPrimaryBarProgress(this.progress);\n      this.setBufferBarProgress(this.buffer);\n      return;\n    }\n\n    if (this.observer) {\n      this.calculateAndSetDimensions(this.adapter.getWidth());\n    }\n\n    this.adapter.addClass(cssClasses.INDETERMINATE_CLASS);\n    this.adapter.removeAttribute(strings.ARIA_VALUENOW);\n    this.adapter.removeAttribute(strings.ARIA_VALUEMAX);\n    this.adapter.removeAttribute(strings.ARIA_VALUEMIN);\n    this.setPrimaryBarProgress(1);\n    this.setBufferBarProgress(1);\n  };\n\n  MDCLinearProgressFoundation.prototype.isDeterminate = function () {\n    return this.determinate;\n  };\n\n  MDCLinearProgressFoundation.prototype.setProgress = function (value) {\n    this.progress = value;\n\n    if (this.determinate) {\n      this.setPrimaryBarProgress(value);\n      this.adapter.setAttribute(strings.ARIA_VALUENOW, value.toString());\n    }\n  };\n\n  MDCLinearProgressFoundation.prototype.getProgress = function () {\n    return this.progress;\n  };\n\n  MDCLinearProgressFoundation.prototype.setBuffer = function (value) {\n    this.buffer = value;\n\n    if (this.determinate) {\n      this.setBufferBarProgress(value);\n    }\n  };\n\n  MDCLinearProgressFoundation.prototype.getBuffer = function () {\n    return this.buffer;\n  };\n\n  MDCLinearProgressFoundation.prototype.open = function () {\n    this.adapter.removeClass(cssClasses.CLOSED_CLASS);\n    this.adapter.removeClass(cssClasses.CLOSED_ANIMATION_OFF_CLASS);\n    this.adapter.removeAttribute(strings.ARIA_HIDDEN);\n  };\n\n  MDCLinearProgressFoundation.prototype.close = function () {\n    this.adapter.addClass(cssClasses.CLOSED_CLASS);\n    this.adapter.setAttribute(strings.ARIA_HIDDEN, 'true');\n  };\n\n  MDCLinearProgressFoundation.prototype.isClosed = function () {\n    return this.adapter.hasClass(cssClasses.CLOSED_CLASS);\n  };\n  /**\n   * Handles the transitionend event emitted after `close()` is called and the\n   * opacity fades out. This is so that animations are removed only after the\n   * progress indicator is completely hidden.\n   */\n\n\n  MDCLinearProgressFoundation.prototype.handleTransitionEnd = function () {\n    if (this.adapter.hasClass(cssClasses.CLOSED_CLASS)) {\n      this.adapter.addClass(cssClasses.CLOSED_ANIMATION_OFF_CLASS);\n    }\n  };\n\n  MDCLinearProgressFoundation.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  };\n\n  MDCLinearProgressFoundation.prototype.restartAnimation = function () {\n    this.adapter.removeClass(cssClasses.ANIMATION_READY_CLASS);\n    this.adapter.forceLayout();\n    this.adapter.addClass(cssClasses.ANIMATION_READY_CLASS);\n  };\n\n  MDCLinearProgressFoundation.prototype.setPrimaryBarProgress = function (progressValue) {\n    var value = \"scaleX(\" + progressValue + \")\"; // Accessing `window` without a `typeof` check will throw on Node\n    // environments.\n\n    var transformProp = typeof window !== 'undefined' ? getCorrectPropertyName(window, 'transform') : 'transform';\n    this.adapter.setPrimaryBarStyle(transformProp, value);\n  };\n\n  MDCLinearProgressFoundation.prototype.setBufferBarProgress = function (progressValue) {\n    var value = progressValue * 100 + \"%\";\n    this.adapter.setBufferBarStyle(strings.FLEX_BASIS, value);\n  };\n\n  MDCLinearProgressFoundation.prototype.calculateAndSetDimensions = function (width) {\n    var primaryHalf = width * percents.PRIMARY_HALF;\n    var primaryFull = width * percents.PRIMARY_FULL;\n    var secondaryQuarter = width * percents.SECONDARY_QUARTER;\n    var secondaryHalf = width * percents.SECONDARY_HALF;\n    var secondaryFull = width * percents.SECONDARY_FULL;\n    this.adapter.setStyle('--mdc-linear-progress-primary-half', primaryHalf + \"px\");\n    this.adapter.setStyle('--mdc-linear-progress-primary-half-neg', -primaryHalf + \"px\");\n    this.adapter.setStyle('--mdc-linear-progress-primary-full', primaryFull + \"px\");\n    this.adapter.setStyle('--mdc-linear-progress-primary-full-neg', -primaryFull + \"px\");\n    this.adapter.setStyle('--mdc-linear-progress-secondary-quarter', secondaryQuarter + \"px\");\n    this.adapter.setStyle('--mdc-linear-progress-secondary-quarter-neg', -secondaryQuarter + \"px\");\n    this.adapter.setStyle('--mdc-linear-progress-secondary-half', secondaryHalf + \"px\");\n    this.adapter.setStyle('--mdc-linear-progress-secondary-half-neg', -secondaryHalf + \"px\");\n    this.adapter.setStyle('--mdc-linear-progress-secondary-full', secondaryFull + \"px\");\n    this.adapter.setStyle('--mdc-linear-progress-secondary-full-neg', -secondaryFull + \"px\"); // need to restart animation for custom props to apply to keyframes\n\n    this.restartAnimation();\n  };\n\n  return MDCLinearProgressFoundation;\n}(MDCFoundation);\n\nexport { MDCLinearProgressFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCLinearProgressFoundation;","map":{"version":3,"sources":["foundation.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;AAqBG;;AAEH,SAAQ,sBAAR,QAAqC,0BAArC;AACA,SAAQ,aAAR,QAA4B,2BAA5B;AAIA,SAAQ,6BAA6B,IAAI,QAAzC,EAAmD,UAAnD,EAA+D,OAA/D,QAA6E,aAA7E;;AAGA,IAAA,2BAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AACI,EAAA,SAAA,CAAA,2BAAA,EAAA,MAAA,CAAA;;AA+BF,WAAA,2BAAA,CAAY,OAAZ,EAAuD;AAAvD,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAU,2BAA2B,CAAC,cAAtC,CAAA,EAAyD,OAAzD,CAAA,KAAkE,IADpE;;AAFQ,IAAA,KAAA,CAAA,QAAA,GAAmC,IAAnC;;AAIP;;AA/BD,EAAA,MAAA,CAAA,cAAA,CAAoB,2BAApB,EAAoB,YAApB,EAA8B;SAA9B,YAAA;AACE,aAAO,UAAP;AACD,KAF6B;qBAAA;;AAAA,GAA9B;AAIA,EAAA,MAAA,CAAA,cAAA,CAAoB,2BAApB,EAAoB,SAApB,EAA2B;SAA3B,YAAA;AACE,aAAO,OAAP;AACD,KAF0B;qBAAA;;AAAA,GAA3B;AAIA,EAAA,MAAA,CAAA,cAAA,CAAoB,2BAApB,EAAoB,gBAApB,EAAkC;SAAlC,YAAA;AACE,aAAO;AACL,QAAA,QAAQ,EAAE,YAAA;AAAM,iBAAA,SAAA;AAAS,SADpB;AAEL,QAAA,oBAAoB,EAAE,YAAA;AAAM,iBAAA,IAAA;AAAI,SAF3B;AAGL,QAAA,WAAW,EAAE,YAAA;AAAM,iBAAA,SAAA;AAAS,SAHvB;AAIL,QAAA,QAAQ,EAAE,YAAA;AAAM,iBAAA,CAAA;AAAC,SAJZ;AAKL,QAAA,QAAQ,EAAE,YAAA;AAAM,iBAAA,KAAA;AAAK,SALhB;AAML,QAAA,iBAAiB,EAAE,YAAA;AAAM,iBAAA,IAAA;AAAI,SANxB;AAOL,QAAA,kBAAkB,EAAE,YAAA;AAAM,iBAAA,IAAA;AAAI,SAPzB;AAQL,QAAA,QAAQ,EAAE,YAAA;AAAM,iBAAA,SAAA;AAAS,SARpB;AASL,QAAA,eAAe,EAAE,YAAA;AAAM,iBAAA,SAAA;AAAS,SAT3B;AAUL,QAAA,WAAW,EAAE,YAAA;AAAM,iBAAA,SAAA;AAAS,SAVvB;AAWL,QAAA,YAAY,EAAE,YAAA;AAAM,iBAAA,SAAA;AAAS;AAXxB,OAAP;AAaD,KAdiC;qBAAA;;AAAA,GAAlC;;AAyBS,EAAA,2BAAA,CAAA,SAAA,CAAA,IAAA,GAAT,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,SAAK,WAAL,GAAmB,CAAC,KAAK,OAAL,CAAa,QAAb,CAAsB,UAAU,CAAC,mBAAjC,CAApB;AACA,SAAK,OAAL,CAAa,QAAb,CAAsB,UAAU,CAAC,qBAAjC;AACA,SAAK,QAAL,GAAgB,CAAhB;AACA,SAAK,MAAL,GAAc,CAAd;AAEA,SAAK,QAAL,GAAgB,KAAK,OAAL,CAAa,oBAAb,CAAkC,UAAC,OAAD,EAAQ;;;AACxD,UAAI,KAAI,CAAC,WAAT,EAAsB;AACpB;AACD;;;AAED,aAAoB,IAAA,SAAA,GAAA,QAAA,CAAA,OAAA,CAAA,EAAO,WAAA,GAAA,SAAA,CAAA,IAAA,EAA3B,EAA2B,CAAA,WAAA,CAAA,IAA3B,EAA2B,WAAA,GAAA,SAAA,CAAA,IAAA,EAA3B,EAA6B;AAAxB,cAAM,KAAK,GAAA,WAAA,CAAA,KAAX;;AACH,cAAI,KAAK,CAAC,WAAV,EAAuB;AACrB,YAAA,KAAI,CAAC,yBAAL,CAA+B,KAAK,CAAC,WAAN,CAAkB,KAAjD;AACD;AACF;;;;;;;;;;;;AACF,KAVe,CAAhB;;AAYA,QAAI,CAAC,KAAK,WAAN,IAAqB,KAAK,QAA9B,EAAwC;AACtC,WAAK,yBAAL,CAA+B,KAAK,OAAL,CAAa,QAAb,EAA/B;AACD;AACF,GArBQ;;AAuBT,EAAA,2BAAA,CAAA,SAAA,CAAA,cAAA,GAAA,UAAe,aAAf,EAAqC;AACnC,SAAK,WAAL,GAAmB,aAAnB;;AAEA,QAAI,KAAK,WAAT,EAAsB;AACpB,WAAK,OAAL,CAAa,WAAb,CAAyB,UAAU,CAAC,mBAApC;AACA,WAAK,OAAL,CAAa,YAAb,CACI,OAAO,CAAC,aADZ,EAC2B,KAAK,QAAL,CAAc,QAAd,EAD3B;AAEA,WAAK,OAAL,CAAa,YAAb,CAA0B,OAAO,CAAC,aAAlC,EAAiD,GAAjD;AACA,WAAK,OAAL,CAAa,YAAb,CAA0B,OAAO,CAAC,aAAlC,EAAiD,GAAjD;AACA,WAAK,qBAAL,CAA2B,KAAK,QAAhC;AACA,WAAK,oBAAL,CAA0B,KAAK,MAA/B;AAEA;AACD;;AAED,QAAI,KAAK,QAAT,EAAmB;AACjB,WAAK,yBAAL,CAA+B,KAAK,OAAL,CAAa,QAAb,EAA/B;AACD;;AAED,SAAK,OAAL,CAAa,QAAb,CAAsB,UAAU,CAAC,mBAAjC;AACA,SAAK,OAAL,CAAa,eAAb,CAA6B,OAAO,CAAC,aAArC;AACA,SAAK,OAAL,CAAa,eAAb,CAA6B,OAAO,CAAC,aAArC;AACA,SAAK,OAAL,CAAa,eAAb,CAA6B,OAAO,CAAC,aAArC;AACA,SAAK,qBAAL,CAA2B,CAA3B;AACA,SAAK,oBAAL,CAA0B,CAA1B;AACD,GAzBD;;AA2BA,EAAA,2BAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;AACE,WAAO,KAAK,WAAZ;AACD,GAFD;;AAIA,EAAA,2BAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,KAAZ,EAAyB;AACvB,SAAK,QAAL,GAAgB,KAAhB;;AACA,QAAI,KAAK,WAAT,EAAsB;AACpB,WAAK,qBAAL,CAA2B,KAA3B;AACA,WAAK,OAAL,CAAa,YAAb,CAA0B,OAAO,CAAC,aAAlC,EAAiD,KAAK,CAAC,QAAN,EAAjD;AACD;AACF,GAND;;AAQA,EAAA,2BAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACE,WAAO,KAAK,QAAZ;AACD,GAFD;;AAIA,EAAA,2BAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,KAAV,EAAuB;AACrB,SAAK,MAAL,GAAc,KAAd;;AACA,QAAI,KAAK,WAAT,EAAsB;AACpB,WAAK,oBAAL,CAA0B,KAA1B;AACD;AACF,GALD;;AAOA,EAAA,2BAAA,CAAA,SAAA,CAAA,SAAA,GAAA,YAAA;AACE,WAAO,KAAK,MAAZ;AACD,GAFD;;AAIA,EAAA,2BAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AACE,SAAK,OAAL,CAAa,WAAb,CAAyB,UAAU,CAAC,YAApC;AACA,SAAK,OAAL,CAAa,WAAb,CAAyB,UAAU,CAAC,0BAApC;AACA,SAAK,OAAL,CAAa,eAAb,CAA6B,OAAO,CAAC,WAArC;AACD,GAJD;;AAMA,EAAA,2BAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACE,SAAK,OAAL,CAAa,QAAb,CAAsB,UAAU,CAAC,YAAjC;AACA,SAAK,OAAL,CAAa,YAAb,CAA0B,OAAO,CAAC,WAAlC,EAA+C,MAA/C;AACD,GAHD;;AAKA,EAAA,2BAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACE,WAAO,KAAK,OAAL,CAAa,QAAb,CAAsB,UAAU,CAAC,YAAjC,CAAP;AACD,GAFD;AAIA;;;;AAIG;;;AACH,EAAA,2BAAA,CAAA,SAAA,CAAA,mBAAA,GAAA,YAAA;AACE,QAAI,KAAK,OAAL,CAAa,QAAb,CAAsB,UAAU,CAAC,YAAjC,CAAJ,EAAoD;AAClD,WAAK,OAAL,CAAa,QAAb,CAAsB,UAAU,CAAC,0BAAjC;AACD;AACF,GAJD;;AAMS,EAAA,2BAAA,CAAA,SAAA,CAAA,OAAA,GAAT,YAAA;AACE,IAAA,MAAA,CAAA,SAAA,CAAM,OAAN,CAAa,IAAb,CAAa,IAAb;;AAEA,QAAI,KAAK,QAAT,EAAmB;AACjB,WAAK,QAAL,CAAc,UAAd;AACD;AACF,GANQ;;AAQT,EAAA,2BAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,YAAA;AACE,SAAK,OAAL,CAAa,WAAb,CAAyB,UAAU,CAAC,qBAApC;AACA,SAAK,OAAL,CAAa,WAAb;AACA,SAAK,OAAL,CAAa,QAAb,CAAsB,UAAU,CAAC,qBAAjC;AACD,GAJD;;AAMQ,EAAA,2BAAA,CAAA,SAAA,CAAA,qBAAA,GAAR,UAA8B,aAA9B,EAAmD;AACjD,QAAM,KAAK,GAAG,YAAU,aAAV,GAAuB,GAArC,CADiD,CAGjD;AACA;;AACA,QAAM,aAAa,GAAG,OAAO,MAAP,KAAkB,WAAlB,GAClB,sBAAsB,CAAC,MAAD,EAAS,WAAT,CADJ,GAElB,WAFJ;AAGA,SAAK,OAAL,CAAa,kBAAb,CAAgC,aAAhC,EAA+C,KAA/C;AACD,GATO;;AAWA,EAAA,2BAAA,CAAA,SAAA,CAAA,oBAAA,GAAR,UAA6B,aAA7B,EAAkD;AAChD,QAAM,KAAK,GAAM,aAAa,GAAG,GAAhB,GAAmB,GAApC;AACA,SAAK,OAAL,CAAa,iBAAb,CAA+B,OAAO,CAAC,UAAvC,EAAmD,KAAnD;AACD,GAHO;;AAKA,EAAA,2BAAA,CAAA,SAAA,CAAA,yBAAA,GAAR,UAAkC,KAAlC,EAA+C;AAC7C,QAAM,WAAW,GAAG,KAAK,GAAG,QAAQ,CAAC,YAArC;AACA,QAAM,WAAW,GAAG,KAAK,GAAG,QAAQ,CAAC,YAArC;AACA,QAAM,gBAAgB,GAAG,KAAK,GAAG,QAAQ,CAAC,iBAA1C;AACA,QAAM,aAAa,GAAG,KAAK,GAAG,QAAQ,CAAC,cAAvC;AACA,QAAM,aAAa,GAAG,KAAK,GAAG,QAAQ,CAAC,cAAvC;AAEA,SAAK,OAAL,CAAa,QAAb,CACI,oCADJ,EAC6C,WAAW,GAAA,IADxD;AAEA,SAAK,OAAL,CAAa,QAAb,CACI,wCADJ,EACiD,CAAE,WAAF,GAAa,IAD9D;AAEA,SAAK,OAAL,CAAa,QAAb,CACI,oCADJ,EAC6C,WAAW,GAAA,IADxD;AAEA,SAAK,OAAL,CAAa,QAAb,CACI,wCADJ,EACiD,CAAE,WAAF,GAAa,IAD9D;AAEA,SAAK,OAAL,CAAa,QAAb,CACI,yCADJ,EACkD,gBAAgB,GAAA,IADlE;AAEA,SAAK,OAAL,CAAa,QAAb,CACI,6CADJ,EAEO,CAAE,gBAAF,GAAkB,IAFzB;AAGA,SAAK,OAAL,CAAa,QAAb,CACI,sCADJ,EAC+C,aAAa,GAAA,IAD5D;AAEA,SAAK,OAAL,CAAa,QAAb,CACI,0CADJ,EACmD,CAAE,aAAF,GAAe,IADlE;AAEA,SAAK,OAAL,CAAa,QAAb,CACI,sCADJ,EAC+C,aAAa,GAAA,IAD5D;AAEA,SAAK,OAAL,CAAa,QAAb,CACI,0CADJ,EACmD,CAAE,aAAF,GAAe,IADlE,EA1B6C,CA6B7C;;AACA,SAAK,gBAAL;AACD,GA/BO;;AAgCV,SAAA,2BAAA;AAAC,CAzMD,CACI,aADJ,CAAA;;wCA2MA;;AACA,eAAe,2BAAf","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends, __values } from \"tslib\";\nimport { getCorrectPropertyName } from '@material/animation/util';\nimport { MDCFoundation } from '@material/base/foundation';\nimport { animationDimensionPercentages as percents, cssClasses, strings } from './constants';\nvar MDCLinearProgressFoundation = /** @class */ (function (_super) {\n    __extends(MDCLinearProgressFoundation, _super);\n    function MDCLinearProgressFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCLinearProgressFoundation.defaultAdapter), adapter)) || this;\n        _this.observer = null;\n        return _this;\n    }\n    Object.defineProperty(MDCLinearProgressFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCLinearProgressFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCLinearProgressFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addClass: function () { return undefined; },\n                attachResizeObserver: function () { return null; },\n                forceLayout: function () { return undefined; },\n                getWidth: function () { return 0; },\n                hasClass: function () { return false; },\n                setBufferBarStyle: function () { return null; },\n                setPrimaryBarStyle: function () { return null; },\n                setStyle: function () { return undefined; },\n                removeAttribute: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                setAttribute: function () { return undefined; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCLinearProgressFoundation.prototype.init = function () {\n        var _this = this;\n        this.determinate = !this.adapter.hasClass(cssClasses.INDETERMINATE_CLASS);\n        this.adapter.addClass(cssClasses.ANIMATION_READY_CLASS);\n        this.progress = 0;\n        this.buffer = 1;\n        this.observer = this.adapter.attachResizeObserver(function (entries) {\n            var e_1, _a;\n            if (_this.determinate) {\n                return;\n            }\n            try {\n                for (var entries_1 = __values(entries), entries_1_1 = entries_1.next(); !entries_1_1.done; entries_1_1 = entries_1.next()) {\n                    var entry = entries_1_1.value;\n                    if (entry.contentRect) {\n                        _this.calculateAndSetDimensions(entry.contentRect.width);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (entries_1_1 && !entries_1_1.done && (_a = entries_1.return)) _a.call(entries_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        });\n        if (!this.determinate && this.observer) {\n            this.calculateAndSetDimensions(this.adapter.getWidth());\n        }\n    };\n    MDCLinearProgressFoundation.prototype.setDeterminate = function (isDeterminate) {\n        this.determinate = isDeterminate;\n        if (this.determinate) {\n            this.adapter.removeClass(cssClasses.INDETERMINATE_CLASS);\n            this.adapter.setAttribute(strings.ARIA_VALUENOW, this.progress.toString());\n            this.adapter.setAttribute(strings.ARIA_VALUEMAX, '1');\n            this.adapter.setAttribute(strings.ARIA_VALUEMIN, '0');\n            this.setPrimaryBarProgress(this.progress);\n            this.setBufferBarProgress(this.buffer);\n            return;\n        }\n        if (this.observer) {\n            this.calculateAndSetDimensions(this.adapter.getWidth());\n        }\n        this.adapter.addClass(cssClasses.INDETERMINATE_CLASS);\n        this.adapter.removeAttribute(strings.ARIA_VALUENOW);\n        this.adapter.removeAttribute(strings.ARIA_VALUEMAX);\n        this.adapter.removeAttribute(strings.ARIA_VALUEMIN);\n        this.setPrimaryBarProgress(1);\n        this.setBufferBarProgress(1);\n    };\n    MDCLinearProgressFoundation.prototype.isDeterminate = function () {\n        return this.determinate;\n    };\n    MDCLinearProgressFoundation.prototype.setProgress = function (value) {\n        this.progress = value;\n        if (this.determinate) {\n            this.setPrimaryBarProgress(value);\n            this.adapter.setAttribute(strings.ARIA_VALUENOW, value.toString());\n        }\n    };\n    MDCLinearProgressFoundation.prototype.getProgress = function () {\n        return this.progress;\n    };\n    MDCLinearProgressFoundation.prototype.setBuffer = function (value) {\n        this.buffer = value;\n        if (this.determinate) {\n            this.setBufferBarProgress(value);\n        }\n    };\n    MDCLinearProgressFoundation.prototype.getBuffer = function () {\n        return this.buffer;\n    };\n    MDCLinearProgressFoundation.prototype.open = function () {\n        this.adapter.removeClass(cssClasses.CLOSED_CLASS);\n        this.adapter.removeClass(cssClasses.CLOSED_ANIMATION_OFF_CLASS);\n        this.adapter.removeAttribute(strings.ARIA_HIDDEN);\n    };\n    MDCLinearProgressFoundation.prototype.close = function () {\n        this.adapter.addClass(cssClasses.CLOSED_CLASS);\n        this.adapter.setAttribute(strings.ARIA_HIDDEN, 'true');\n    };\n    MDCLinearProgressFoundation.prototype.isClosed = function () {\n        return this.adapter.hasClass(cssClasses.CLOSED_CLASS);\n    };\n    /**\n     * Handles the transitionend event emitted after `close()` is called and the\n     * opacity fades out. This is so that animations are removed only after the\n     * progress indicator is completely hidden.\n     */\n    MDCLinearProgressFoundation.prototype.handleTransitionEnd = function () {\n        if (this.adapter.hasClass(cssClasses.CLOSED_CLASS)) {\n            this.adapter.addClass(cssClasses.CLOSED_ANIMATION_OFF_CLASS);\n        }\n    };\n    MDCLinearProgressFoundation.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.observer) {\n            this.observer.disconnect();\n        }\n    };\n    MDCLinearProgressFoundation.prototype.restartAnimation = function () {\n        this.adapter.removeClass(cssClasses.ANIMATION_READY_CLASS);\n        this.adapter.forceLayout();\n        this.adapter.addClass(cssClasses.ANIMATION_READY_CLASS);\n    };\n    MDCLinearProgressFoundation.prototype.setPrimaryBarProgress = function (progressValue) {\n        var value = \"scaleX(\" + progressValue + \")\";\n        // Accessing `window` without a `typeof` check will throw on Node\n        // environments.\n        var transformProp = typeof window !== 'undefined' ?\n            getCorrectPropertyName(window, 'transform') :\n            'transform';\n        this.adapter.setPrimaryBarStyle(transformProp, value);\n    };\n    MDCLinearProgressFoundation.prototype.setBufferBarProgress = function (progressValue) {\n        var value = progressValue * 100 + \"%\";\n        this.adapter.setBufferBarStyle(strings.FLEX_BASIS, value);\n    };\n    MDCLinearProgressFoundation.prototype.calculateAndSetDimensions = function (width) {\n        var primaryHalf = width * percents.PRIMARY_HALF;\n        var primaryFull = width * percents.PRIMARY_FULL;\n        var secondaryQuarter = width * percents.SECONDARY_QUARTER;\n        var secondaryHalf = width * percents.SECONDARY_HALF;\n        var secondaryFull = width * percents.SECONDARY_FULL;\n        this.adapter.setStyle('--mdc-linear-progress-primary-half', primaryHalf + \"px\");\n        this.adapter.setStyle('--mdc-linear-progress-primary-half-neg', -primaryHalf + \"px\");\n        this.adapter.setStyle('--mdc-linear-progress-primary-full', primaryFull + \"px\");\n        this.adapter.setStyle('--mdc-linear-progress-primary-full-neg', -primaryFull + \"px\");\n        this.adapter.setStyle('--mdc-linear-progress-secondary-quarter', secondaryQuarter + \"px\");\n        this.adapter.setStyle('--mdc-linear-progress-secondary-quarter-neg', -secondaryQuarter + \"px\");\n        this.adapter.setStyle('--mdc-linear-progress-secondary-half', secondaryHalf + \"px\");\n        this.adapter.setStyle('--mdc-linear-progress-secondary-half-neg', -secondaryHalf + \"px\");\n        this.adapter.setStyle('--mdc-linear-progress-secondary-full', secondaryFull + \"px\");\n        this.adapter.setStyle('--mdc-linear-progress-secondary-full-neg', -secondaryFull + \"px\");\n        // need to restart animation for custom props to apply to keyframes\n        this.restartAnimation();\n    };\n    return MDCLinearProgressFoundation;\n}(MDCFoundation));\nexport { MDCLinearProgressFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCLinearProgressFoundation;\n//# sourceMappingURL=foundation.js.map"]},"metadata":{},"sourceType":"module"}